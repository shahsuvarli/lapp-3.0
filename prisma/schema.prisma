generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "sqlserver"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account_Manager {
  account_manager_id Int        @id(map: "PK__Account___294E22B08554CA09")
  account_manager    String?    @db.VarChar(255)
  sales_org_id       Int?
  is_active          Boolean?
  Sales_Org          Sales_Org? @relation(fields: [sales_org_id], references: [sales_org_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_account_manager_sales_org_7g3fje")
  Quote              Quote[]
}

model Channel {
  channel_id   Int       @id(map: "PK__Channel__2D0861AB7D2B3C01")
  channel_name String?   @db.VarChar(255)
  is_active    Boolean?
  Project      Project[]
}

model Competitor {
  competitor_id         Int                  @id(map: "PK__Competit__861A24E40D332C98") @default(autoincrement())
  competitor_name       String?              @db.VarChar(50)
  sales_org_id          Int?
  is_active             Boolean?             @default(true, map: "DF__Competito__is_ac__5CA1C101")
  competitor_short_name String?              @db.VarChar(10)
  Project_Competitor    Project_Competitor[]
}

model Customer {
  sap_id         Int       @id(map: "PK__Customer__5E8533EB8788A58B")
  customer_name  String?   @db.VarChar(100)
  city           String?   @db.VarChar(100)
  state          String?   @db.VarChar(100)
  country        String?   @db.VarChar(100)
  price_group    String?   @db.VarChar(100)
  datetime_added DateTime? @default(now(), map: "DF__Customer__dateti__6E01572D") @db.DateTime
  Quote          Quote[]
}

model DSM {
  dsm_id       Int        @id(map: "PK__DSM__F23591D078A614D1")
  dsm          String?    @db.VarChar(255)
  sales_org_id Int?
  is_active    Boolean?
  Sales_Org    Sales_Org? @relation(fields: [sales_org_id], references: [sales_org_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_dsm_sales_org_9h4fh")
  Quote        Quote[]
}

model Employees {
  employee_id                            Int       @id(map: "PK__employee__C52E0BA876DA549F") @default(autoincrement())
  username                               String    @db.VarChar(100)
  name                                   String?   @db.VarChar(100)
  surname                                String?   @db.VarChar(100)
  email                                  String    @db.VarChar(255)
  position                               String?   @db.VarChar(50)
  created_date                           DateTime? @db.Date
  is_active                              Boolean?
  sales_org_id                           Int?
  Project_Project_created_byToEmployees  Project[] @relation("Project_created_byToEmployees")
  Project_Project_deleted_byToEmployees  Project[] @relation("Project_deleted_byToEmployees")
  Project_Project_modified_byToEmployees Project[] @relation("Project_modified_byToEmployees")
  Quote_Quote_created_byToEmployees      Quote[]   @relation("Quote_created_byToEmployees")
  Quote_Quote_deleted_byToEmployees      Quote[]   @relation("Quote_deleted_byToEmployees")
  Quote_Quote_modified_byToEmployees     Quote[]   @relation("Quote_modified_byToEmployees")
}

model Material {
  material_id        String               @id(map: "PK__tmp_ms_x__DEDA434489DEA300") @db.VarChar(50)
  description        String?              @db.VarChar(255)
  product_family     String?              @db.VarChar(50)
  stock_6100         Int?
  stock_6120         Int?
  stock_6130         Int?
  stock_6140         Int?
  price_group        String?              @db.VarChar(20)
  sales_org_id       Int?
  Sales_Org          Sales_Org?           @relation(fields: [sales_org_id], references: [sales_org_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Material__sales___7B5B524B")
  Material_Quoted    Material_Quoted[]
  Material_Sales_Org Material_Sales_Org[]
}

model Material_Quoted {
  id                  Int       @id(map: "PK__Material__3213E83F657D0AD7") @default(autoincrement())
  material_id         String?   @db.VarChar(50)
  quantity            Decimal?  @db.Decimal(10, 2)
  line_notes          String?   @db.VarChar(255)
  discount_percent    Decimal?  @db.Decimal(12, 4)
  copper_base_price   Decimal?  @db.Decimal(12, 2)
  full_base_price     Decimal?  @db.Decimal(12, 2)
  margin_full_copper  Decimal?  @db.Decimal(12, 2)
  line_value          Decimal?  @db.Decimal(12, 2)
  line_cogs           Decimal?  @db.Decimal(12, 2)
  quote_version       Int?
  permanent_quote_id  Int?
  is_manual_overwrite Boolean?
  is_active           Boolean?  @default(true, map: "DEFAULT_Material_Quoted_is_active")
  Material            Material? @relation(fields: [material_id], references: [material_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_material_quoted_material_id_f34t3")
}

model Project {
  project_id                               Int                  @id(map: "PK__Project__BC799E1FBA1881F6") @default(autoincrement())
  sales_org_id                             Int?
  project_name                             String?              @db.VarChar(255)
  general_contractor                       String?              @db.VarChar(50)
  electrical_contractor                    String?              @db.VarChar(50)
  region                                   Int?
  state                                    Int?
  vertical_market                          Int?
  won_lost                                 String?              @db.VarChar(20)
  status                                   String?              @db.VarChar(20)
  channel                                  Int?
  notes                                    String?              @db.VarChar(255)
  total_value                              Decimal?             @db.Decimal(10, 2)
  ranking                                  Int?
  created_by                               Int?
  created_date                             DateTime?            @db.Date
  modified_by                              Int?
  modified_date                            DateTime?            @db.Date
  datetime_added                           DateTime?            @default(now(), map: "DF_Project_datetime_added") @db.DateTime
  total_cost                               Decimal?             @db.Decimal(10, 2)
  total_margin                             Decimal?             @db.Decimal(10, 2)
  deleted_by                               Int?
  deleted_date                             DateTime?            @db.Date
  is_active                                Boolean?             @default(true, map: "DF_project_is_active_2h9h2")
  Channel                                  Channel?             @relation(fields: [channel], references: [channel_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Project__channel__160F4887")
  Employees_Project_created_byToEmployees  Employees?           @relation("Project_created_byToEmployees", fields: [created_by], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_project_created_by_930dok")
  Employees_Project_deleted_byToEmployees  Employees?           @relation("Project_deleted_byToEmployees", fields: [deleted_by], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Project_deleted_by_78hf4d")
  Employees_Project_modified_byToEmployees Employees?           @relation("Project_modified_byToEmployees", fields: [modified_by], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_project_modified_by_3d7hifw")
  Region                                   Region?              @relation(fields: [region], references: [region_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_project_region_2309d2")
  Sales_Org                                Sales_Org?           @relation(fields: [sales_org_id], references: [sales_org_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_project_sales_org_9237hd")
  Vertical_Market                          Vertical_Market?     @relation(fields: [vertical_market], references: [vertical_market_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_project_ver_market_90j23")
  State                                    State?               @relation(fields: [state], references: [state_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_state_state_id_9h3dnj")
  Project_Competitor                       Project_Competitor[]
  Project_Sap_Order                        Project_Sap_Order[]
  Quote                                    Quote[]
}

model Project_Competitor {
  id             Int        @id(map: "PK__Project___3213E83FBA34E227") @default(autoincrement())
  competitor_id  Int
  project_id     Int
  datetime_added DateTime?  @default(now(), map: "DF__Project_C__datet__634EBE90") @db.DateTime
  is_active      Boolean?   @default(true, map: "DF__Project_C__is_ac__6442E2C9")
  deleted_by     Int?
  deleted_date   DateTime?  @db.DateTime
  Competitor     Competitor @relation(fields: [competitor_id], references: [competitor_id], onUpdate: NoAction, map: "FK__Project_C__delet__65370702")
  Project        Project    @relation(fields: [project_id], references: [project_id], onUpdate: NoAction, map: "FK__Project_C__proje__662B2B3B")
}

model Project_Sap_Order {
  id             Int       @id(map: "PK__Project___3213E83F59E4394D") @default(autoincrement())
  project_id     Int?
  sap_order_id   Int?
  datetime_added DateTime? @default(now(), map: "DF__Project_S__datet__540C7B00") @db.DateTime
  is_active      Boolean?  @default(true, map: "DF__Project_S__is_ac__58D1301D")
  deleted_by     Int?
  deleted_date   DateTime? @db.DateTime
  Project        Project?  @relation(fields: [project_id], references: [project_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Project_sap_order_8h39r")
}

model Quote {
  id                                     Int              @id(map: "PK_Quote") @default(autoincrement())
  quote_id                               Int?
  project_id                             Int?
  sap_quote_id                           Int?
  sap_customer_id                        Int?
  quote_version                          Int?
  created_by                             Int?
  modified_by                            Int?
  created_date                           DateTime?        @db.Date
  modified_date                          DateTime?        @db.Date
  account_manager_id                     Int?
  dsm_id                                 Int?
  copper_rate                            Decimal?         @db.Decimal(5, 2)
  deleted_by                             Int?
  deleted_date                           DateTime?        @db.DateTime
  is_active                              Boolean?         @default(true, map: "DF__Quote__is_active__6DCC4D03")
  datetime_added                         DateTime?        @default(now(), map: "DF__Quote__datetime___6EC0713C") @db.DateTime
  quote_value                            Int?
  quote_cost                             Int?
  quote_margin                           Decimal?         @db.Decimal(10, 1)
  notes                                  String?          @db.Text
  Account_Manager                        Account_Manager? @relation(fields: [account_manager_id], references: [account_manager_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Quote__account_m__73852659")
  Employees_Quote_created_byToEmployees  Employees?       @relation("Quote_created_byToEmployees", fields: [created_by], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Quote__created_b__719CDDE7")
  Project                                Project?         @relation(fields: [project_id], references: [project_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Quote__datetime___6FB49575")
  Employees_Quote_deleted_byToEmployees  Employees?       @relation("Quote_deleted_byToEmployees", fields: [deleted_by], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Quote__deleted_b__756D6ECB")
  DSM                                    DSM?             @relation(fields: [dsm_id], references: [dsm_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Quote__dsm_id__74794A92")
  Employees_Quote_modified_byToEmployees Employees?       @relation("Quote_modified_byToEmployees", fields: [modified_by], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Quote__modified___72910220")
  Customer                               Customer?        @relation(fields: [sap_customer_id], references: [sap_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Quote__sap_custo__70A8B9AE")
}

model Region {
  region_id    Int        @id(map: "PK__Region__01146BAE5C334547")
  region_name  String?    @db.VarChar(255)
  is_active    Boolean?
  sales_org_id Int?
  Project      Project[]
  Sales_Org    Sales_Org? @relation(fields: [sales_org_id], references: [sales_org_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_region_sales_org_j390d")
}

model Sales_Org {
  sales_org_id       Int                  @id(map: "PK__Sales_Or__F011BA5EE6BDD652")
  sales_org          String?              @db.VarChar(255)
  is_active          Boolean?
  Account_Manager    Account_Manager[]
  DSM                DSM[]
  Material           Material[]
  Material_Sales_Org Material_Sales_Org[]
  Project            Project[]
  Region             Region[]
  State              State[]
}

model State {
  state_id         Int        @id(map: "PK__State__81A4741770A01248") @default(autoincrement())
  sales_org_id     Int?
  state_long_name  String?    @db.VarChar(50)
  state_short_name String?    @db.VarChar(2)
  Project          Project[]
  Sales_Org        Sales_Org? @relation(fields: [sales_org_id], references: [sales_org_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__State__sales_org__58F12BAE")
}

model Users {
  user_id      Int       @id(map: "PK__Users__B9BE370F57DBC44D")
  username     String?   @db.VarChar(255)
  name         String?   @db.VarChar(255)
  surname      String?   @db.VarChar(255)
  position     String?   @db.VarChar(255)
  email        String?   @db.VarChar(255)
  created_date DateTime? @db.Date
  is_active    Boolean?
}

model Vertical_Market {
  vertical_market_id   Int       @id(map: "PK__Vertical__7A60A7C278DB2479")
  vertical_market_name String?   @db.VarChar(255)
  is_active            Boolean?
  Project              Project[]
}

model Material_Sales_Org {
  id               Int        @id(map: "PK__Material__3213E83FDCF90BA4") @default(autoincrement())
  material_id      String     @db.VarChar(50)
  uom              String?    @db.VarChar(20)
  copper_weight    Decimal?   @db.Decimal(7, 2)
  cost_full_copper Decimal?   @db.Decimal(10, 2)
  pricing_unit     String?    @db.VarChar(20)
  level_5_base_cu  Decimal?   @db.Decimal(10, 2)
  low_discount     Decimal?   @db.Decimal(7, 2)
  average_discount Decimal?   @db.Decimal(7, 2)
  high_discount    Decimal?   @db.Decimal(7, 2)
  sales_org_id     Int?
  Material         Material   @relation(fields: [material_id], references: [material_id], onUpdate: NoAction, map: "FK_material_material_id_23r23r")
  Sales_Org        Sales_Org? @relation(fields: [sales_org_id], references: [sales_org_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Material___sales__66A02C87")
}
